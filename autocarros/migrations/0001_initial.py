# Generated by Django 4.2.11 on 2025-10-05 20:32

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Autocarro',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero', models.CharField(max_length=20, unique=True, verbose_name='Número do Autocarro')),
                ('modelo', models.CharField(max_length=100, verbose_name='Modelo')),
                ('placa', models.CharField(max_length=20, verbose_name='Placa')),
                ('lat', models.FloatField(default=-8.8383)),
                ('lng', models.FloatField(default=13.2344)),
                ('status', models.CharField(choices=[('ativo', 'Ativo'), ('manutencao', 'Em manutenção'), ('inativo', 'Inativo')], default='ativo', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Motorista',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=120)),
                ('telefone', models.CharField(blank=True, max_length=30, null=True)),
                ('numero_bi', models.CharField(blank=True, max_length=50, null=True)),
                ('ativo', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Sector',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, unique=True)),
                ('slug', models.SlugField(blank=True, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='RelatorioSector',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.DateField()),
                ('descricao', models.TextField(blank=True, null=True)),
                ('sector', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='relatorios', to='autocarros.sector')),
            ],
            options={
                'ordering': ['-data'],
                'unique_together': {('sector', 'data')},
            },
        ),
        migrations.CreateModel(
            name='RegistoDiario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.DateField(default=django.utils.timezone.now, verbose_name='Data')),
                ('concluido', models.BooleanField(default=False)),
                ('validado', models.BooleanField(default=False)),
                ('data_conclusao', models.DateTimeField(blank=True, null=True)),
                ('data_validacao', models.DateTimeField(blank=True, null=True)),
                ('normal', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('alunos', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('luvu', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('frete', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('alimentacao', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('parqueamento', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('taxa', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('outros', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('numero_passageiros', models.PositiveIntegerField(default=0)),
                ('numero_viagens', models.PositiveIntegerField(default=0)),
                ('km_percorridos', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('motorista', models.CharField(blank=True, default='N/A', max_length=100)),
                ('cobrador_principal', models.CharField(blank=True, default='N/A', max_length=100)),
                ('cobrador_auxiliar', models.CharField(blank=True, default='N/A', max_length=100)),
                ('autocarro', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='registos_diarios', to='autocarros.autocarro')),
                ('relatorio', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='registos', to='autocarros.relatoriosector')),
            ],
            options={
                'verbose_name_plural': 'Registos Diários',
                'unique_together': {('autocarro', 'data')},
            },
        ),
        migrations.CreateModel(
            name='RegistoArquivo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('arquivo', models.FileField(upload_to='registos/arquivos/')),
                ('descricao', models.CharField(blank=True, max_length=255, null=True)),
                ('registo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='arquivos', to='autocarros.registodiario')),
            ],
        ),
        migrations.CreateModel(
            name='EstadoAutocarro',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.DateTimeField(auto_now_add=True)),
                ('motor_funciona', models.BooleanField(default=True)),
                ('pneus_bons', models.BooleanField(default=True)),
                ('luzes_funcionam', models.BooleanField(default=True)),
                ('travoes_bons', models.BooleanField(default=True)),
                ('parabrisas_ok', models.BooleanField(default=True)),
                ('bancos_bons', models.BooleanField(default=True)),
                ('observacoes', models.TextField(blank=True, null=True)),
                ('autocarro', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='estados', to='autocarros.autocarro')),
            ],
        ),
        migrations.CreateModel(
            name='DespesaCombustivel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.DateField(default=django.utils.timezone.now)),
                ('valor', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('valor_litros', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('comprovativo', models.FileField(blank=True, null=True, upload_to='comprovativos/combustivel/')),
                ('descricao', models.TextField(blank=True, null=True)),
                ('sobragem_filtros', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('lavagem', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('autocarro', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='autocarros.autocarro')),
                ('sector', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='autocarros.sector')),
            ],
        ),
        migrations.CreateModel(
            name='Despesa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('valor', models.DecimalField(decimal_places=2, max_digits=10)),
                ('descricao', models.TextField()),
                ('data', models.DateField()),
                ('numero_transacao', models.CharField(blank=True, max_length=50, null=True)),
                ('numero_requisicao', models.CharField(blank=True, max_length=50, null=True)),
                ('registo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='despesas', to='autocarros.registodiario')),
                ('sector', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='despesas', to='autocarros.sector')),
            ],
        ),
        migrations.CreateModel(
            name='ComprovativoRelatorio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('arquivo', models.FileField(upload_to='comprovativos/relatorios/')),
                ('descricao', models.CharField(blank=True, max_length=255, null=True)),
                ('enviado_em', models.DateTimeField(auto_now_add=True)),
                ('relatorio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comprovativos', to='autocarros.relatoriosector')),
            ],
            options={
                'ordering': ['-enviado_em'],
            },
        ),
        migrations.CreateModel(
            name='Comprovativo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('arquivo', models.FileField(upload_to='despesas/comprovativos/')),
                ('enviado_em', models.DateTimeField(auto_now_add=True)),
                ('despesa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comprovativos', to='autocarros.despesa')),
            ],
            options={
                'ordering': ['-enviado_em'],
            },
        ),
        migrations.AddField(
            model_name='autocarro',
            name='sector',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='autocarros', to='autocarros.sector'),
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('telefone', models.CharField(blank=True, max_length=15, null=True)),
                ('nivel_acesso', models.CharField(choices=[('ADMIN', 'Administrador'), ('GESTOR', 'Gestor'), ('OPERADOR', 'Operador'), ('VISUALIZADOR', 'Visualizador')], default='OPERADOR', max_length=20)),
                ('data_registro', models.DateTimeField(auto_now_add=True)),
                ('ativo', models.BooleanField(default=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
