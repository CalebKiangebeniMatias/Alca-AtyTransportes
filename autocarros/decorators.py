from django.shortcuts import redirect
from functools import wraps
from django.contrib import messages

def acesso_restrito(niveis_permitidos):
    """
    Decorador para restringir acesso com base no nÃ­vel do usuÃ¡rio.
    Exemplo de uso: @acesso_restrito(['admin', 'gestor'])
    """
    def decorator(view_func):
        @wraps(view_func)
        def wrapper(request, *args, **kwargs):
            # ğŸ”¹ Verifica se o usuÃ¡rio estÃ¡ autenticado
            if not request.user.is_authenticated:
                messages.warning(request, "VocÃª precisa fazer login para acessar esta pÃ¡gina.")
                return redirect('login')

            # ğŸ”¹ Verifica o nÃ­vel de acesso
            nivel = getattr(request.user, 'nivel_acesso', None)
            if nivel not in niveis_permitidos and not request.user.is_superuser:
                messages.error(request, "Acesso negado. VocÃª nÃ£o tem permissÃ£o para acessar esta pÃ¡gina.")
                return redirect('acesso_negado')  # ou qualquer outra view de erro

            # ğŸ”¹ Permite o acesso
            return view_func(request, *args, **kwargs)

        return wrapper
    return decorator
